jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: graduate_work
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: [8.2]

    name: PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: finance_app

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Set up environment for testing
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_DATABASE=graduate_work" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
              echo "Waiting for MySQL to be ready... ($i/30)"
              if mysqladmin ping -hmysql -uroot -proot --silent; then
                  echo "MySQL is ready!"
                  break
              fi
              sleep 2
          done

      - name: Run migrations
        run: php artisan migrate --env=testing

      - name: Run Tests
        run: vendor/bin/phpunit --configuration phpuni
